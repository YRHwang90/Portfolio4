{"frames":[{"func":"map(sim_result, ~tibble(est = sim_result[[1]], se = sqrt(diag(vcov(.x))[2]), \n    ci = confint(.x, parm = \"time\")) %>% transmute(est, se, li = ci[1], \n    ui = ci[2])) %>% bind_rows()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"bind_rows(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"list2(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map(sim_result, ~tibble(est = sim_result[[1]], se = sqrt(diag(vcov(.x))[2]), \n    ci = confint(.x, parm = \"time\")) %>% transmute(est, se, li = ci[1], \n    ui = ci[2]))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".f(.x[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble(est = sim_result[[1]], se = sqrt(diag(vcov(.x))[2]), ci = confint(.x, \n    parm = \"time\")) %>% transmute(est, se, li = ci[1], ui = ci[2])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"transmute(., est, se, li = ci[1], ui = ci[2])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble(est = sim_result[[1]], se = sqrt(diag(vcov(.x))[2]), ci = confint(.x, \n    parm = \"time\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_quos(xs, .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_valid_col(res, col_names[[j]], j)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_valid_cols(set_names(list(x), name))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(error_column_scalar_type(names_x[is_xd], pos[is_xd], \n    classes))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: All columns in a tibble must be vectors.\n\u001B[31mx\u001B[39m Column `est` is a `lmerMod` object.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}